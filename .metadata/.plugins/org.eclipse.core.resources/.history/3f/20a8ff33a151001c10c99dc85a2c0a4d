package com.revature.controller;

import com.revature.model.User;
import com.revature.service.AuthService;
import com.revature.service.UserService;

import io.javalin.Javalin;
import io.javalin.http.Handler;

public class UserController implements Controller {

	private AuthService authorizationService;
	private UserService userService;

	public UserController() {
		this.authorizationService = new AuthService();
		this.userService = new UserService();
	}

	// Logged in as financial manager or employee
	private Handler getUserById = (ctx) -> {
		User user = (User) ctx.req.getSession().getAttribute("currentuser");
		this.authorizationService.authorizeEmployeeAndFinanceManger(user);

	};

	// Logged in only as financial manager
	private Handler addFinanceManger = (ctx) -> {
		User user = (User) ctx.req.getSession().getAttribute("currentuser");
		this.authorizationService.authorizeFinanceManager(user);

	};

	// get all users by username
	private Handler getAllUserbyUsername = (ctx) -> {

		User currentlyLoggedInUser = (User) ctx.req.getSession().getAttribute("currentuser");
		this.authorizationService.authorizeEmployeeAndFinanceManger(currentlyLoggedInUser);

		String username = ctx.formParam("username");

		if (username == null) {
			ctx.json("Cannot find username");
			ctx.status(400);
		}
		User getAllUser = this.userService.displayUserbyUsername(username);
		ctx.json(getAllUser);
		ctx.status(200);
	};

	@Override
	public void mapEndPoints(Javalin app) {
		app.get("/users/{userID}", getUserById);
		app.post("/users", addFinanceManger);
		app.get("/userByUsername", getAllUserbyUsername);

	}

}
