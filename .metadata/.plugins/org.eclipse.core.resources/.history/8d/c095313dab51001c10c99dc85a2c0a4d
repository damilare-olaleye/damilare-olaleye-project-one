package com.revature.dao;

import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.revature.model.Reimbursement;
import com.revature.util.JDBCUtil;

public class ReimbursementDAO implements ReimbursementInterfaceDAO {

	private Logger logger = LoggerFactory.getLogger(ReimbursementDAO.class);

	@Override
	public List<Reimbursement> getAllReimbursements() throws SQLException {

		logger.info("getAllReimbursements() invoked");

		List<Reimbursement> reimbursements = new ArrayList<>();

		Reimbursement reimbursement = new Reimbursement();

		try (Connection con = JDBCUtil.getConnection()) {

			String sql = "SELECT * FROM reimbursement";

			PreparedStatement pstmt = con.prepareStatement(sql);

			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {

				reimbursement.setReimbId(rs.getInt("reimbursement_id"));
				reimbursement.setStatus(rs.getString("reimbursement_status"));
				reimbursement.setType(rs.getString("reimbursement_type"));
				reimbursement.setDescription(rs.getString("reimbursement_description"));
				reimbursement.setAmount(rs.getInt("reimbursement_amount"));
				reimbursement.setReceipt(rs.getBinaryStream("reimbursement_receipt"));
				reimbursement.setAuthor(rs.getInt("reimbursement_author"));
				reimbursement.setResolver(rs.getInt("reimbursement_resolver"));
				reimbursement.setUserId(rs.getInt("user_id"));

				reimbursements.add(reimbursement);

			}

			return reimbursements;

		}
	}

	@Override
	public Reimbursement submitRequest(String type, String description, int amount, int author) throws SQLException {

		logger.info("submitRequest(...) invoked");

		try (Connection con = JDBCUtil.getConnection()) {
			String sql = "INSERT INTO reimbursement "
					+ "(reimbursement_type, reimbursement_amount, reimbursement_description, reimbursement_submitted, reimbursement_author) "
					+ "VALUES (?,?,?,now(),?);";

			con.setAutoCommit(false);

			InputStream receipt = null;

			PreparedStatement pstmt = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);

			pstmt.setString(1, type);
			pstmt.setString(2, description);
			pstmt.setInt(3, amount);
			pstmt.setInt(4, author);

			int numberOfInsertedRecords = pstmt.executeUpdate();

			if (numberOfInsertedRecords != 1) {
				throw new SQLException("Issue occurred when adding reimbursement");
			}

			ResultSet rs = pstmt.getGeneratedKeys();

			rs.next();
			int generatedId = rs.getInt(1);

			con.commit();

			return new Reimbursement(generatedId, type, description, "", amount, receipt, author, 0, 0);

		}
	}

	public void updateReimbursement(int id, String status, int reimbursementId) throws SQLException {

		try (Connection con = JDBCUtil.getConnection()) {

			String sql = "UPDATE reimbursement SET reimbursement_status = ?, "
					+ "reimbursement_resolved = now(), reimbursement_resolver = ? " + "WHERE reimbursement_id = ?;";

			PreparedStatement pstmt = con.prepareStatement(sql);

			pstmt.setString(1, status);
			pstmt.setInt(2, id);
			pstmt.setInt(3, reimbursementId);

			int updateReimbursements = pstmt.executeUpdate();

			if (updateReimbursements != 1) {
				throw new SQLException("Cannot update reimbursement");
			}
		}
	}

}
